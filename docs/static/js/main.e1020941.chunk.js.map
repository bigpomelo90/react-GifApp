{"version":3,"sources":["Componets/AddCategory.js","helpers/getGifs.js","Componets/GifGridItem.js","Componets/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","className","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifRead","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","role","aria-label","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAwB9C,OACI,0BAAMC,SAfU,SAACC,GAEjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OAEvCN,EAAc,OAQf,2BACKO,KAAK,OACLC,MAAUT,EACVU,SAzBc,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,QAwBhBG,UAAU,yDACVC,YAAY,a,uBClCfC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAgBZM,GAhBY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,yBAAKL,UAAY,0CACb,yBAAKmB,IAAQd,EAAMe,IAAQL,IAC3B,2BAAKA,KCLJM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAGTa,ECJW,SAAEb,GAAe,IAAD,EAEdhB,mBAAS,CAC/BuB,KAAM,GACNY,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAW,WAEPvB,EAASC,GACJuB,MAAM,SAAAC,GACCH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAI1B,CAAEnB,IAEEoB,EDfiBK,CAAczB,GAA9BO,KAGR,OACI,oCACA,wBAAIV,UAAU,qCAAsCG,GAEpD,yBAAKH,UAAY,gFAELgB,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAgB,IAAQhB,EAAIC,IACRD,UEVfiB,EAAe,WAAO,IAAD,EAGM3C,mBAAS,CAAC,KAHhB,mBAGvB4C,EAHuB,KAGX7C,EAHW,KAK9B,OACI,oCACI,wBAAIc,UAAY,0CACZ,0BAAMgC,KAAK,MAAMC,aAAW,SAA5B,gBADJ,aAC2D,0BAAMD,KAAK,MAAMC,aAAW,SAA5B,iBAE3D,kBAAC,EAAD,CAAa/C,cAAkBA,IAC/B,4BAEQ6C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACA0B,IAAQ1B,EACRA,SAAaA,U,MCnBrC+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.e1020941.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        \r\n        setInputValue( e.target.value );\r\n\r\n    }\r\n\r\n    const handeSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            \r\n            setCategories( cats => [ inputValue,...cats  ]);\r\n\r\n            setInputValue('');\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handeSubmit }>\r\n           <input\r\n                type='text'\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n                className='animate__animated animate__fadeIn animate__fadeIn-1.7s'\r\n                placeholder='Search'\r\n           />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n","export const getGifs = async ( category ) => {\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=yT8j4bYpRi5aQCM290kUXvNSAkAUVAPF` ;\r\n    const resp = await fetch(url);\r\n    \r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className = 'card animate__animated animate__fadeIn'>\r\n            <img src = { url } alt = { title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifRead = ({ category }) => {\r\n\r\n\r\n    const { data:images } = useFetchGifs( category );\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\r\n\r\n        <div className = 'card-grid animate__animated animate__fadeInLeftBig animate__fadeInLeftBig-1s'>\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        key = { img.id }\r\n                        {...img }\r\n                        />\r\n                    ))\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n\r\n        getGifs( category )\r\n            .then( imgs => { \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n            })\r\n\r\n    }, [ category ]);\r\n\r\n    return state;\r\n\r\n}","/**------------------------------------------------------------------------------------------------\r\n *                                         rafc\r\n *                                         rafce\r\n *------------------------------------------------------------------------------------------------**/\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './Componets/AddCategory'\r\nimport { GifRead } from './Componets/GifGrid'\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState([''])\r\n\r\n    return (\r\n        <>\r\n            <h1 className = 'animate__animated animate__fadeInDown '>\r\n                <span role=\"img\" aria-label=\"Panda\">ðŸ‘¾</span>Gif Search<span role=\"img\" aria-label=\"Panda\">ðŸ‘¾</span>\r\n            </h1>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifRead \r\n                        key = { category }\r\n                        category = { category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}